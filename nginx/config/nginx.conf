# This configuration file sets up Nginx to serve as a reverse proxy for
# two processes running in separate Docker containers (`webapp` and `jupyterlab`).
# When a request comes into Nginx on port 80, it routes the request to the appropriate
# upstream server based on the URL path.

user  nginx; # run Nginx as the `nginx` user
worker_processes  auto; # specify number of worker processes. `auto` lets Nginx determine.

error_log  /var/log/nginx/error.log notice; # log errors to this file, and set log level to `notice`
pid        /var/run/nginx.pid; # specify the file where Nginx should store its process ID


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    # use `log_foramt` to specify the format of the access log, overriding the default
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    # use `access_log` to specify the file where Nginx should store access logs
    access_log  /var/log/nginx/access.log  main;

    sendfile        on; # optimizes loading speed for serving static files
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # Use the `upstream` section to reference other services within the docker-compose.yml
    # file. The `server` directive specifies the name of the service and the port it is
    # listening on.
    upstream jupyterlab {
       server dsnb:8888;
    }
    upstream webapp {
       server webapp:8000;
    }
    server {
        listen 80; # listen on port 80

        # location / {
        #     root /data/www;
        # }

        # this defines the root location for the server. All requests will be routed to
        # the `webapp` service. With `proxy_pass`, Nginx sits between the client and the
        # `webapp` service, and passes requests to the service.
        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_buffering off;
            proxy_pass http://webapp;
        }
        # this defines how Nginx should route requests to the `/jupyter` path. All requests
        # to `/jupyter` will be routed to the `jupyterlab` service.
        location /jupyter  {
            proxy_pass http://jupyterlab;
        }
    }
}
